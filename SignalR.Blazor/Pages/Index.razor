@page "/"
@using Microsoft.AspNetCore.SignalR.Client
@using Microsoft.Extensions.Logging
@using System.Threading
@inject NavigationManager NavigationManager
@inject IJSRuntime JS
@implements IAsyncDisposable

<h1>Hello, world!</h1>

<p><strong>Images will load as they become available...</strong></p>
<div id="images">
</div>

<SurveyPrompt Title="How is Blazor working for you?" />

@code
{
    private IAsyncEnumerable<byte[]> _stream;
    private CancellationTokenSource _cancellationTokenSource;
    private HubConnection _connection;

    protected override async Task OnInitializedAsync()
    {
        _connection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/streamhub"))
            .ConfigureLogging(logging =>
            {
                logging.AddDebug();
                logging.SetMinimumLevel(LogLevel.Debug);
            })
            .Build();

        _connection.ServerTimeout = TimeSpan.FromMinutes(3);

        _connection.Closed += async (error) =>
        {
            await Task.Delay(1000);
            await _connection.StartAsync();
        };

        await _connection.StartAsync();

        _cancellationTokenSource = new CancellationTokenSource();
        _stream = _connection.StreamAsync<byte[]>("SendDataRow", _cancellationTokenSource.Token);

        await foreach (var bytes in _stream.WithCancellation(_cancellationTokenSource.Token))
        {
            var src = Convert.ToBase64String(bytes);
            var image = $"data:image/jpeg;base64,{src}";

            await JS.InvokeVoidAsync("loadImage", image);
        }
    }

    public async ValueTask DisposeAsync()
    {
        if (_connection is not null)
        {
            await _connection.DisposeAsync();
        }
    }
}